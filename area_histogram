int Solution::largestRectangleArea(vector<int> &A) {
    stack<int> s;
    int n = A.size();
    vector<int> g1(n);
    vector<int> g2(n);
    for(int i=0;i<n;++i){
        
        if(i==0){
            s.push(i);
            g1[i] = -1;
        }
        else{
            
            while(!s.empty()&&A[s.top()]>=A[i]){
                s.pop();
            }
            
            if(s.empty())   g1[i] = -1;
            else            g1[i] = s.top();
            s.push(i);
            
        }
        
    }
    
    while(!s.empty()) s.pop();
    
    for(int i=n-1;i>=0;--i){
        
        if(i==n-1){
            s.push(i);
            g2[i] = -1;
        }
        else{
            
            while(!s.empty()&&A[s.top()]>=A[i]){
                s.pop();
            }
            
            if(s.empty())   g2[i] = -1;
            else            g2[i] = s.top();
            s.push(i);
            
        }
        
    }    
    
    
    int ans = INT_MIN;
    for(int i = 0;i<n;++i){
        
        int start,end;
        if(g1[i]==-1){
            start = 0;
        }
        else{
            start = g1[i]+1;
        }
        if(g2[i]==-1){
            end = n-1;
        }
        else{
            end = g2[i]-1;
        }
        ans = max(ans,(end-start+1)*A[i]);
        //cout<<i<<' '<<start<<' '<<end<<' '<<ans<<endl;
        
    }
    return ans;
}
